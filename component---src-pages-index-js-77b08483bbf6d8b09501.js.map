{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Tag.js"],"names":["styles","post","css","rhythm","h3","link","name","p","tags","titleWrapper","subtitle","palette","secondary","BlogIndex","_ref","data","location","_data$site$siteMetada","site","siteMetadata","siteTitle","title","keywords","posts","allMarkdownRemark","edges","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","_components_Seo__WEBPACK_IMPORTED_MODULE_9__","_components_Bio__WEBPACK_IMPORTED_MODULE_7__","map","_ref2","node","_node$frontmatter","frontmatter","path","_node$frontmatter$tit","fields","slug","tag","text","kebabCase","key","date","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","dangerouslySetInnerHTML","__html","excerpt","_components_Tag__WEBPACK_IMPORTED_MODULE_10__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","propTypes","PropTypes","object","isRequired","pageQuery","root","orange","a","Tag","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_4__","string"],"mappings":"sRAaMA,EAAS,CACXC,KAAMC,YAAF,iBACiBC,YAAO,GADxB,KAGJC,GAAIF,YAAF,cACgBC,YAAO,KADvB,kBAEmBA,YAAO,KAF1B,KAIFE,KAAI,CAAAC,KAAA,SAAAN,OAAA,oBAGJO,EAAC,CAAAD,KAAA,UAAAN,OAAA,uBAGDQ,KAAI,CAAAF,KAAA,SAAAN,OAAA,iBAGJS,aAAcP,YAAF,iBACSC,YAAO,KADhB,KAGZO,SAAUR,YAAF,SACKS,IAAQC,UADb,uCAWNC,EAAY,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,SAAcC,EACCF,EAAKG,KAAKC,aAAjCC,EADsBH,EAC7BI,MAAkBC,EADWL,EACXK,SACnBC,EAAQR,EAAKS,kBAAkBC,MAErC,OACIC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAQZ,SAAUA,EAAUK,MAAOD,GAC/BM,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAKR,MAAM,YAAYC,SAAUA,IACjCI,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,MACCP,EAAMQ,IAAI,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KAAUC,EACgCD,EAAKE,YAAjDzB,EADYwB,EACZxB,SAAU0B,EADEF,EACFE,KADEC,EAAAH,EACIb,aADJ,IAAAgB,EACYJ,EAAKK,OAAOC,KADxBF,EAEb7B,EAAOyB,EAAKE,YAAY3B,KAAKuB,IAAI,SAAAS,GAAG,MAAK,CAC3CC,KAAMD,EACNnC,KAAI,SAAWqC,IAAUF,GAArB,OAGR,OACId,OAAAC,EAAA,EAAAD,CAAA,OAAKxB,IAAKF,EAAOC,KAAM0C,IAAKV,EAAKK,OAAOC,MACpCb,OAAAC,EAAA,EAAAD,CAAA,aAAQO,EAAKE,YAAYS,MACzBlB,OAAAC,EAAA,EAAAD,CAAA,OAAKxB,IAAKF,EAAOS,cACbiB,OAAAC,EAAA,EAAAD,CAAA,MAAIxB,IAAKF,EAAOI,IACZsB,OAAAC,EAAA,EAAAD,CAACmB,EAAA,KAAD,CAAM3C,IAAKF,EAAOK,KAAMyC,GAAIV,GACvBf,IAGRX,GAAYgB,OAAAC,EAAA,EAAAD,CAAA,QAAMxB,IAAKF,EAAOU,UAAWA,IAE9CgB,OAAAC,EAAA,EAAAD,CAAA,KAAGxB,IAAKF,EAAOO,EAAGwC,wBAAyB,CAACC,OAAQf,EAAKgB,WACzDvB,OAAAC,EAAA,EAAAD,CAAA,OAAKxB,IAAKF,EAAOQ,MACZA,EAAKuB,IAAI,SAAAS,GAAG,OACTd,OAAAC,EAAA,EAAAD,CAACwB,EAAA,EAADC,IAAA,CAAKR,IAAKH,EAAIC,MAAUD,YAUxD3B,EAAUuC,UAAY,CAClBrC,KAAMsC,IAAUC,OAAOC,WACvBvC,SAAUqC,IAAUC,OAAOC,YAGhB1C,YAER,IAAM2C,EAAS,yGCnFhBxD,EAAS,CACXyD,KAAMvD,YAAF,oDAGoBS,IAAQ+C,OAH5B,uFAWJC,EAAC,CAAArD,KAAA,SAAAN,OAAA,uCAWC4D,EAAM,SAAA9C,GAAA,IAAET,EAAFS,EAAET,KAAMoC,EAAR3B,EAAQ2B,KAAR,OACRf,OAAAmC,EAAA,EAAAnC,CAAA,OAAKxB,IAAKF,EAAOyD,MACb/B,OAAAmC,EAAA,EAAAnC,CAACoC,EAAA,KAAD,CAAM5D,IAAKF,EAAO2D,EAAGb,GAAIzC,GACpBoC,KAKbmB,EAAIR,UAAY,CACZX,KAAMY,IAAUU,OAAOR,WACvBlD,KAAMgD,IAAUU,OAAOR,YAGZK","file":"component---src-pages-index-js-77b08483bbf6d8b09501.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport {css} from '@emotion/core';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Tag from '../components/Tag';\nimport {palette} from '../utils/theme';\nimport {rhythm} from '../utils/typography';\n\nconst styles = {\n    post: css`\n        margin-bottom: ${rhythm(2)};\n    `,\n    h3: css`\n        margin-top: ${rhythm(1 / 4)};\n        margin-bottom: ${rhythm(1 / 4)};\n    `,\n    link: css`\n        box-shadow: none;\n    `,\n    p: css`\n        margin-bottom: 15px;\n    `,\n    tags: css`\n        display: flex;\n    `,\n    titleWrapper: css`\n        margin-bottom: ${rhythm(1 / 4)};\n    `,\n    subtitle: css`\n        color: ${palette.secondary};\n        font-size: 1.2rem;\n        font-weight: 700;\n    `\n};\n\n/**\n * Builds the index page of the blog\n * @return {React.ReactNode} node\n */\nconst BlogIndex = ({data, location}) => {\n    const {title: siteTitle, keywords} = data.site.siteMetadata;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"All posts\" keywords={keywords} />\n            <Bio />\n            {posts.map(({node}) => {\n                const {subtitle, path, title = node.fields.slug} = node.frontmatter;\n                const tags = node.frontmatter.tags.map(tag => ({\n                    text: tag,\n                    link: `/tags/${kebabCase(tag)}/`\n                }));\n\n                return (\n                    <div css={styles.post} key={node.fields.slug}>\n                        <small>{node.frontmatter.date}</small>\n                        <div css={styles.titleWrapper}>\n                            <h3 css={styles.h3}>\n                                <Link css={styles.link} to={path}>\n                                    {title}\n                                </Link>\n                            </h3>\n                            {subtitle && <span css={styles.subtitle}>{subtitle}</span>}\n                        </div>\n                        <p css={styles.p} dangerouslySetInnerHTML={{__html: node.excerpt}} />\n                        <div css={styles.tags}>\n                            {tags.map(tag => (\n                                <Tag key={tag.text} {...tag} />\n                            ))}\n                        </div>\n                    </div>\n                );\n            })}\n        </Layout>\n    );\n};\n\nBlogIndex.propTypes = {\n    data: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n                keywords\n            }\n        }\n        allMarkdownRemark(\n            sort: {fields: [frontmatter___date], order: DESC}\n            filter: {frontmatter: {draft: {ne: true}}}\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        subtitle\n                        tags\n                        path\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {css} from '@emotion/core';\nimport {Link} from 'gatsby';\n\nimport {palette} from '../utils/theme';\n\nconst styles = {\n    root: css`\n        display: flex;\n        align-items: center;\n        border: 1px solid ${palette.orange};\n        border-radius: 5px;\n        padding: 0 5px;\n        margin-right: 5px;\n        :hover {\n            background-color: #4c5156;\n        }\n    `,\n    a: css`\n        box-shadow: none;\n        font-size: 0.75rem;\n    `\n};\n\n/**\n *\n * @param {Object} props - props\n * @returns {React.ReactNode} node\n */\nconst Tag = ({link, text}) => (\n    <div css={styles.root}>\n        <Link css={styles.a} to={link}>\n            {text}\n        </Link>\n    </div>\n);\n\nTag.propTypes = {\n    text: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n};\n\nexport default Tag;\n"],"sourceRoot":""}