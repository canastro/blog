{"data":{"site":{"siteMetadata":{"title":"Canastro's notes","author":"Ricardo Canastro"}},"markdownRemark":{"id":"827e22f6-49cd-5af3-8a97-a3565cd318b0","excerpt":"This is a series of posts about how to create a module of reusable ui components with typescript, storybook and styled components: Part 1 - Bootstrap your…","html":"<p>This is a series of posts about how to create a module of reusable ui components with typescript, storybook and styled components:</p>\n<ul>\n<li>Part 1 - Bootstrap your project and sample app</li>\n<li>Part 2 - Adding a default theme</li>\n</ul>\n<p>Most likely your components will have some common UI characteristics, such as colors, paddings, fonts, etc. having a theme to normalize this will come handy. </p>\n<p>In this tutorial we’re just going to create a palette for the theme, but lets create it in a separate file to promote some separation instead of creating a huge file with all theme variables.</p>\n<p><strong>src/theme/palette.ts</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> palette <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  white<span class=\"token punctuation\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span>\n  grey<span class=\"token punctuation\">:</span> <span class=\"token string\">'#f7f9fa'</span><span class=\"token punctuation\">,</span>\n  black<span class=\"token punctuation\">:</span> <span class=\"token string\">'#222'</span><span class=\"token punctuation\">,</span>\n  primary<span class=\"token punctuation\">:</span> <span class=\"token string\">'#6d30e7'</span><span class=\"token punctuation\">,</span>\n  secondary<span class=\"token punctuation\">:</span> <span class=\"token string\">'#dfdded'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> palette<span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>src/theme/index.ts</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> palette <span class=\"token keyword\">from</span> <span class=\"token string\">'./palette'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n    palette\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In order to use this theme we’re going to use the styled-components <a href=\"https://www.styled-components.com/docs/advanced#theming\">ThemeProvider</a>, the usage would be something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ThemeProvider theme<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>StyledButton<span class=\"token operator\">></span>Hello World<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledButton<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ThemeProvider<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>But, as you might notice, the StyleButton does not do anything with the provided theme, so we need to change something. If you go back to your <strong>styled-button.jsx</strong> you can change your RootStyledButton to use theme colors instead of hardcoded colors for example. To access the theme you add a function to your template literal and get the theme from the props:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> RootStyledButton <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token string\">`\n  padding: 0px 20px;\n  height: 49px;\n  border-radius: 2px;\n  border: 2px solid #3d5567;\n  display: inline-flex;\n  background-color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props <span class=\"token operator\">=></span>\n    props<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">?</span> props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>palette<span class=\"token punctuation\">.</span>secondary <span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>theme<span class=\"token punctuation\">.</span>palette<span class=\"token punctuation\">.</span>primary<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So, now we need to update our story to also include the theme. Storybook has a function called <code class=\"language-text\">addDecorator</code> which allows you to define a high order component that will be use with all your stories, so just make sure you import the ThemeProvider and the theme and add your decorator to your story:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">.</span><span class=\"token function\">addDecorator</span><span class=\"token punctuation\">(</span>renderStory <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>ThemeProvider theme<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token function\">renderStory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ThemeProvider<span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Update your <strong>index.ts</strong> to also export your theme related files:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> ThemeProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">as</span> theme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./theme'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">as</span> StyledButton <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./styled-button/styled-button'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We’re exposing ThemeProvider from styled-components just so that we don’t make the use install styled-components just to use our lib. (MAKE SURE THAT IT WORKS PROPERLY IF CUSTOMER IS ALSO USING STYLED-COMPONENTS).</p>\n<h1>Update your sample app</h1>\n<ol>\n<li>Add our ThemeProvider to the root of the sample app: </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ThemeProvider<span class=\"token punctuation\">,</span> theme <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'bob-ross-kit'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>ThemeProvider theme<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>theme<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ThemeProvider<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>Now use your components within the provider, and they’ll have access to the theme props:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyledButton <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'bob-ross-kit'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Comp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token operator\">&lt;</span>StyledButton onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clicked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Button<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledButton<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>StyledButtton disabled<span class=\"token operator\">></span>My Button<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledButton<span class=\"token operator\">></span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"React UI-Kit - Adding a theme (Part 2)","date":"January 02, 2019"}}},"pageContext":{"slug":"/2019-09-02-react-ui-lib-part2/","previous":{"fields":{"slug":"/2019-09-01-react-ui-lib-part1/"},"frontmatter":{"title":"React UI-Kit - Setup, Create first component and Sample app (Part 1)"}},"next":null}}