{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Bio.js"],"names":["__webpack_require__","r","__webpack_exports__","Glamor","d","pageQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","n","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_Seo__WEBPACK_IMPORTED_MODULE_4__","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","Tags","_ref","pageContext","data","location","siteTitle","site","siteMetadata","title","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","createElement","description","map","_ref2","_node$frontmatter","node","frontmatter","path","key","to","propTypes","PropTypes","shape","string","isRequired","number","arrayOf","object","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","styles","root","marginLeft","marginRight","maxWidth","padding","h1","Object","assign","marginBottom","marginTop","h3","fontFamily","link","textDecoration","color","footer","display","alignItems","justifyContent","backgroundColor","Layout","header","__PATH_PREFIX__","pathname","startsWith","style","gatsby__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_3__","role","aria-label","href","any","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","flexDirection","gravatar","flex","social","width","alignSelf","Bio","_data$site$siteMetada","react_gravatar__WEBPACK_IMPORTED_MODULE_3___default","size","email","twitter","react_icons_fa__WEBPACK_IMPORTED_MODULE_4__","linkedin","stackoverflow","_public_static_d_3268991543_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-tags-js-c4db8004a75825728b54.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\n\n// Components\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Bio from '../components/Bio';\n\n/**\n * Tags page\n * @param {Object} props - props\n * @returns {React.ReactNode} tags page\n */\nconst Tags = ({pageContext, data, location}) => {\n    const {title: siteTitle} = data.site.siteMetadata;\n    const {tag} = pageContext;\n    const {edges, totalCount} = data.allMarkdownRemark;\n    const tagHeader = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title={tag} description={tagHeader} />\n            <Bio />\n            <h4>{tagHeader}</h4>\n            <ul>\n                {edges.map(({node}) => {\n                    const {path, title} = node.frontmatter;\n                    return (\n                        <li key={path}>\n                            <Link to={path}>{title}</Link>\n                        </li>\n                    );\n                })}\n            </ul>\n            {/*\n              This links to a page that does not yet exist.\n              We'll come back to it!\n            */}\n            <Link to=\"/tags\">All tags</Link>\n        </Layout>\n    );\n};\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(PropTypes.shape({\n                node: PropTypes.shape({\n                    frontmatter: PropTypes.shape({\n                        path: PropTypes.string.isRequired,\n                        title: PropTypes.string.isRequired\n                    })\n                })\n            }).isRequired)\n        }),\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                title: PropTypes.string.isRequired\n            })\n        })\n    }),\n    location: PropTypes.object.isRequired\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            sort: {fields: [frontmatter___date], order: DESC}\n            filter: {frontmatter: {tags: {in: [$tag]}}}\n        ) {\n            totalCount\n            edges {\n                node {\n                    frontmatter {\n                        path\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => ({\n    'a.gatsby-resp-image-link': {\n        boxShadow: 'none'\n    }\n});\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles();\n}\n\nexport default typography;\nexport const {rhythm, scale} = typography;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\nimport 'prismjs/themes/prism-okaidia.css';\nimport './prism.css';\n\nimport {rhythm, scale} from '../utils/typography';\n\nconst styles = {\n    root: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n    },\n    h1: {\n        ...scale(1.5),\n        marginBottom: rhythm(1.5),\n        marginTop: 0\n    },\n    h3: {\n        fontFamily: 'Montserrat, sans-serif',\n        marginTop: 0,\n        marginBottom: rhythm(-1)\n    },\n    link: {\n        boxShadow: 'none',\n        textDecoration: 'none',\n        color: 'inherit'\n    },\n    footer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: rhythm(3 / 4),\n        backgroundColor: '#000',\n        color: '#fff'\n    }\n};\n\n/**\n * Builds the base page layout\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst Layout = ({location, title, children}) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const tagsPath = `${__PATH_PREFIX__}/tags`;\n    let header;\n\n    if (rootPath === location.pathname || location.pathname.startsWith(tagsPath)) {\n        header = (\n            <h1 style={styles.h1}>\n                <Link style={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h1>\n        );\n    } else {\n        header = (\n            <h3 style={styles.h3}>\n                <Link style={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h3>\n        );\n    }\n    return (\n        <Fragment>\n            <div style={styles.root}>\n                {header}\n                {children}\n            </div>\n            <footer style={styles.footer}>\n                <span>\n                    <span role=\"img\" aria-label=\"copyright\">\n                        ©\n                    </span>{' '}\n                    2019, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n                </span>\n            </footer>\n        </Fragment>\n    );\n};\n\nLayout.propTypes = {\n    location: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\n/**\n * Updates header for SEO purposes\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst SEO = ({\n    description, lang, meta, keywords, title\n}) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={(data) => {\n            const metaDescription = description || data.site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: data.site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(keywords.length > 0\n                            ? {\n                                name: 'keywords',\n                                content: keywords.join(', ')\n                            }\n                            : [])\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport {StaticQuery, graphql} from 'gatsby';\nimport Gravatar from 'react-gravatar';\nimport {FaTwitter, FaStackOverflow, FaLinkedin} from 'react-icons/fa';\n\nimport {rhythm} from '../utils/typography';\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: rhythm(2.5)\n    },\n    gravatar: {\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0\n    },\n    description: {\n        flex: 1\n    },\n    social: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: 150,\n        alignSelf: 'center'\n    }\n};\n\nconst bioQuery = graphql`\n    query BioQuery {\n        site {\n            siteMetadata {\n                author\n                social {\n                    linkedin\n                    stackoverflow\n                    twitter\n                }\n            }\n        }\n    }\n`;\n\n/**\n * Builds the Bio section\n * @returns {React.ReactNode} node\n */\nconst Bio = () => (\n    <StaticQuery\n        query={bioQuery}\n        render={(data) => {\n            const {author, social} = data.site.siteMetadata;\n            return (\n                <div style={styles.root}>\n                    <div style={{display: 'flex'}}>\n                        <div style={styles.gravatar}>\n                            <Gravatar size={75} email=\"ricardocanastro@gmail.com\" />\n                        </div>\n\n                        <p style={styles.description}>\n                            <strong>&#x22;Canastro's Notes&#x22;</strong>, is a software development\n                            (mainly javascript) blog written by <strong>{author}</strong> a Software\n                            Developer based in Porto, Portugal and currently working for\n                            {' '}<a href=\"//www.dashdash.com\">dashdash</a>.\n                        </p>\n                    </div>\n                    <div style={styles.social}>\n                        <a title=\"twitter\" href={social.twitter}>\n                            <FaTwitter />\n                        </a>\n                        <a title=\"linkedin\" href={social.linkedin}>\n                            <FaLinkedin />\n                        </a>\n                        <a title=\"stackoverflow\" href={social.stackoverflow}>\n                            <FaStackOverflow />\n                        </a>\n                    </div>\n                </div>\n            );\n        }}\n    />\n);\n\nexport default Bio;\n"],"sourceRoot":""}