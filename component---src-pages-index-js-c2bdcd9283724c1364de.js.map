{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Tag.js"],"names":["styles","post","css","rhythm","articleTitle","link","name","p","tags","titleWrapper","subtitle","theme","secondary","BlogIndex","_ref","data","location","_data$site$siteMetada","site","siteMetadata","siteTitle","title","keywords","posts","allMarkdownRemark","edges","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_components_ThemeProvider__WEBPACK_IMPORTED_MODULE_6__","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","_components_Seo__WEBPACK_IMPORTED_MODULE_9__","_components_Bio__WEBPACK_IMPORTED_MODULE_7__","map","_ref2","node","_node$frontmatter","frontmatter","path","_node$frontmatter$tit","fields","slug","tag","text","kebabCase","key","date","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","dangerouslySetInnerHTML","__html","excerpt","_components_Tag__WEBPACK_IMPORTED_MODULE_10__","_extends","pageQuery","a","Tag","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"wcAaA,IAAMA,EAAS,CACXC,KAAMC,YAAF,iBACiBC,YAAO,GADxB,KAGJC,aAAcF,YAAF,cACMC,YAAO,KADb,kBAESA,YAAO,KAFhB,KAIZE,KAAI,CAAAC,KAAA,SAAAN,OAAA,oBAGJO,EAAC,CAAAD,KAAA,UAAAN,OAAA,uBAGDQ,KAAI,CAAAF,KAAA,SAAAN,OAAA,iBAGJS,aAAcP,YAAF,iBACSC,YAAO,KADhB,KAGZO,SAAU,SAAAC,GAAK,OAAIT,WAAJ,UACFS,EAAMC,UADJ,wCA8DJC,UAnDG,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,SAAcC,EACCF,EAAKG,KAAKC,aAAjCC,EADsBH,EAC7BI,MAAkBC,EADWL,EACXK,SACnBC,EAAQR,EAAKS,kBAAkBC,MAErC,OACIC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CAAQb,SAAUA,EAAUK,MAAOD,GAC/BM,OAAAC,EAAA,EAAAD,CAACI,EAAA,EAAD,CAAKT,MAAM,YAAYC,SAAUA,IACjCI,OAAAC,EAAA,EAAAD,CAACK,EAAA,EAAD,MACAL,OAAAC,EAAA,EAAAD,CAAA,YACKH,EAAMS,IAAI,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KAAUC,EACgCD,EAAKE,YAAjD1B,EADYyB,EACZzB,SAAU2B,EADEF,EACFE,KADEC,EAAAH,EACId,aADJ,IAAAiB,EACYJ,EAAKK,OAAOC,KADxBF,EAEb9B,EAAO0B,EAAKE,YAAY5B,KAAKwB,IAAI,SAAAS,GAAG,MAAK,CAC3CC,KAAMD,EACNpC,KAAI,SAAWsC,IAAUF,GAArB,OAGR,OACIf,OAAAC,EAAA,EAAAD,CAAA,WAASxB,IAAKF,EAAOC,KAAM2C,IAAKV,EAAKK,OAAOC,MACxCd,OAAAC,EAAA,EAAAD,CAAA,aAAQQ,EAAKE,YAAYS,MACzBnB,OAAAC,EAAA,EAAAD,CAAA,OAAKxB,IAAKF,EAAOS,cACbiB,OAAAC,EAAA,EAAAD,CAAA,MAAIxB,IAAKF,EAAOI,cACZsB,OAAAC,EAAA,EAAAD,CAACoB,EAAA,EAAD,CAAM5C,IAAKF,EAAOK,KAAM0C,GAAIV,GACvBhB,IAGRX,GAAYgB,OAAAC,EAAA,EAAAD,CAAA,QAAMxB,IAAKF,EAAOU,UAAWA,IAE9CgB,OAAAC,EAAA,EAAAD,CAAA,KACIxB,IAAKF,EAAOO,EACZyC,wBAAyB,CAACC,OAAQf,EAAKgB,WAE3CxB,OAAAC,EAAA,EAAAD,CAAA,OAAKxB,IAAKF,EAAOQ,MACZA,EAAKwB,IAAI,SAAAS,GAAG,OACTf,OAAAC,EAAA,EAAAD,CAACyB,EAAA,EAADC,EAAA,CAAKR,IAAKH,EAAIC,MAAUD,cAmBzD,IAAMY,EAAS,gFC5FhBrD,EAAS,CACXsD,EAAG,SAAA3C,GAAK,OAAIT,WAAJ,qDAGgBS,EAAMN,KAHtB,0FA4BGkD,IAXH,SAAAzC,GAAA,IAAET,EAAFS,EAAET,KAAMqC,EAAR5B,EAAQ4B,KAAR,OACRhB,OAAA8B,EAAA,EAAA9B,CAAC+B,EAAA,EAAD,CAAMvD,IAAKF,EAAOsD,EAAGP,GAAI1C,GACpBqC","file":"component---src-pages-index-js-c2bdcd9283724c1364de.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport {css} from '@emotion/core';\n\nimport ThemeProvider from '../components/ThemeProvider';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Tag from '../components/Tag';\nimport {rhythm} from '../utils/typography';\n\nconst styles = {\n    post: css`\n        margin-bottom: ${rhythm(2)};\n    `,\n    articleTitle: css`\n        margin-top: ${rhythm(1 / 4)};\n        margin-bottom: ${rhythm(1 / 4)};\n    `,\n    link: css`\n        box-shadow: none;\n    `,\n    p: css`\n        margin-bottom: 15px;\n    `,\n    tags: css`\n        display: flex;\n    `,\n    titleWrapper: css`\n        margin-bottom: ${rhythm(1 / 4)};\n    `,\n    subtitle: theme => css`\n        color: ${theme.secondary};\n        font-size: 1.2rem;\n        font-weight: 700;\n    `\n};\n\n/**\n * Builds the index page of the blog\n * @return {React.ReactNode} node\n */\nconst BlogIndex = ({data, location}) => {\n    const {title: siteTitle, keywords} = data.site.siteMetadata;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <ThemeProvider>\n            <Layout location={location} title={siteTitle}>\n                <SEO title=\"All posts\" keywords={keywords} />\n                <Bio />\n                <main>\n                    {posts.map(({node}) => {\n                        const {subtitle, path, title = node.fields.slug} = node.frontmatter;\n                        const tags = node.frontmatter.tags.map(tag => ({\n                            text: tag,\n                            link: `/tags/${kebabCase(tag)}/`\n                        }));\n\n                        return (\n                            <article css={styles.post} key={node.fields.slug}>\n                                <small>{node.frontmatter.date}</small>\n                                <div css={styles.titleWrapper}>\n                                    <h2 css={styles.articleTitle}>\n                                        <Link css={styles.link} to={path}>\n                                            {title}\n                                        </Link>\n                                    </h2>\n                                    {subtitle && <span css={styles.subtitle}>{subtitle}</span>}\n                                </div>\n                                <p\n                                    css={styles.p}\n                                    dangerouslySetInnerHTML={{__html: node.excerpt}}\n                                />\n                                <div css={styles.tags}>\n                                    {tags.map(tag => (\n                                        <Tag key={tag.text} {...tag} />\n                                    ))}\n                                </div>\n                            </article>\n                        );\n                    })}\n                </main>\n            </Layout>\n        </ThemeProvider>\n    );\n};\n\nBlogIndex.propTypes = {\n    data: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n                keywords\n            }\n        }\n        allMarkdownRemark(\n            sort: {fields: [frontmatter___date], order: DESC}\n            filter: {frontmatter: {draft: {ne: true}}}\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        subtitle\n                        tags\n                        path\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {css} from '@emotion/core';\nimport {Link} from 'gatsby';\n\nconst styles = {\n    a: theme => css`\n        display: flex;\n        align-items: center;\n        border: 1px solid ${theme.link};\n        border-radius: 5px;\n        padding: 0 5px;\n        margin-right: 5px;\n        box-shadow: none;\n        font-size: 0.75rem;\n    `\n};\n\n/**\n *\n * @param {Object} props - props\n * @returns {React.ReactNode} node\n */\nconst Tag = ({link, text}) => (\n    <Link css={styles.a} to={link}>\n        {text}\n    </Link>\n);\n\nTag.propTypes = {\n    text: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n};\n\nexport default Tag;\n"],"sourceRoot":""}