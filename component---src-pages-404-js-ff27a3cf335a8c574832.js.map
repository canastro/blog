{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/theme.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","_ref","location","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_Seo__WEBPACK_IMPORTED_MODULE_4__","title","propTypes","PropTypes","object","isRequired","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","graphql","Error","string","func","__webpack_require__","d","__webpack_exports__","palette","text","primary","orange","gray","white","color","subtitle","link","body","blockquote","m","module","exports","require","default","Wordpress2016","overrideThemeStyles","h1","h2, h3, h4","a","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","scale","value","scaled","css","fontSize","lineHeight","rhythm","globalStyles","styles","root","h3","name","Layout","header","__PATH_PREFIX__","pathname","startsWith","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","any","SEO","description","lang","meta","keywords","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","array","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-404-js-ff27a3cf335a8c574832.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\n\n/**\n * Not found page\n * @return {React.ReactNode} - node\n */\nconst NotFoundPage = ({location}) => (\n    <Layout location={location}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n);\n\nNotFoundPage.propTypes = {\n    location: PropTypes.object.isRequired\n};\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","export const palette = {\n    primary: '#222222',\n    orange: '#f29d0b',\n    gray: '#f1f5f7',\n    white: '#fff'\n};\n\nexport const text = {\n    title: {color: palette.white},\n    subtitle: {color: palette.white},\n    link: {color: palette.orange},\n    body: {color: palette.gray},\n    blockquote: {color: palette.gray}\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\nimport {css} from '@emotion/core';\nimport {text} from './theme';\n\nWordpress2016.overrideThemeStyles = () => ({\n    h1: {\n        color: text.title.color\n    },\n    'h2, h3, h4': {\n        color: text.subtitle.color\n    },\n    blockquote: {\n        color: text.blockquote.color\n    },\n    a: {\n        color: text.link.color\n    },\n    'a.gatsby-resp-image-link': {\n        boxShadow: 'none'\n    }\n});\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles();\n}\n\n/**\n * Scales a text\n * @param {Number} value - text scale\n * @returns {String} css\n */\nexport const scale = (value) => {\n    const scaled = typography.scale(value);\n\n    return css`\n        font-size: ${scaled.fontSize};\n        line-height: ${scaled.lineHeight};\n    `;\n};\n\nexport const {rhythm} = typography;\nexport default typography;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\nimport {css, Global} from '@emotion/core';\n\nimport 'prismjs/themes/prism-okaidia.css';\nimport './prism.css';\nimport {palette, text} from '../utils/theme';\nimport {rhythm, scale} from '../utils/typography';\n\nconst globalStyles = css`\n    body {\n        background: ${palette.primary};\n        color: ${text.body.color};\n    }\n`;\n\nconst styles = {\n    root: css`\n        margin-left: auto;\n        margin-right: auto;\n        max-width: ${rhythm(30)};\n        padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n    `,\n    h1: css`\n        ${scale(1.25)}\n        margin-bottom: ${rhythm(1)};\n        margin-top: 0;\n    `,\n    h3: css`\n        font-family: Montserrat, sans-serif;\n        margin-top: 0;\n        margin-bottom: ${rhythm(-1)};\n    `,\n    link: css`\n        box-shadow: none;\n        text-decoration: none;\n        color: inherit;\n    `\n};\n\n/**\n * Builds the base page layout\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst Layout = ({location, title, children}) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const tagsPath = `${__PATH_PREFIX__}/tags`;\n    let header;\n\n    if (rootPath === location.pathname || location.pathname.startsWith(tagsPath)) {\n        header = (\n            <h1 css={styles.h1}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h1>\n        );\n    } else {\n        header = (\n            <h3 css={styles.h3}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h3>\n        );\n    }\n    return (\n        <div css={styles.root}>\n            <Global styles={globalStyles} />\n            {header}\n            {children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    location: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\n/**\n * Updates header for SEO purposes\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst SEO = ({\n    description, lang, meta, keywords, title\n}) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={(data) => {\n            const metaDescription = description || data.site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: data.site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(keywords.length > 0\n                            ? {\n                                name: 'keywords',\n                                content: keywords.join(', ')\n                            }\n                            : [])\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}