{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/ThemeContext.js","webpack:///./src/utils/typography.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./src/utils/theme.js","webpack:///./src/components/ThemeProvider.js","webpack:///./src/styles/prism-theme-light.js","webpack:///./src/styles/prism-theme-dark.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Tag.js"],"names":["styles","subtitle","css","rhythm","smallText","scale","hr","discuss","name","navigation","tags","BlogPostTemplate","props","post","data","markdownRemark","siteTitle","site","siteMetadata","title","_props$pageContext","pageContext","previous","next","_post$frontmatter","frontmatter","tweet","keywords","map","tag","text","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_Seo__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","header","_components_Tag__WEBPACK_IMPORTED_MODULE_7__","_extends","key","date","dangerouslySetInnerHTML","__html","html","href","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","pageQuery","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","children","Consumer","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","ThemeContext","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","Wordpress2016","googleFonts","typography","Typography","value","scaled","fontSize","lineHeight","root","h1","h3","link","toggleTheme","theme","color","background","Layout","_useContext","useContext","__PATH_PREFIX__","pathname","startsWith","gatsby__WEBPACK_IMPORTED_MODULE_4__","aria-label","onClick","react_icons_fa__WEBPACK_IMPORTED_MODULE_5__","size","SEO","lang","meta","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","palette","getTheme","ThemeProvider","_useTheme","storedTheme","window","localStorage","getItem","_useState","useState","setTheme","useEffect","setItem","prevTheme","useTheme","currentTheme","lightTheme","forceUpdate","document","body","classList","remove","core_browser_esm","Provider","emotion_theming_browser_esm","backgroundColor","blockquote","body.light",".container","css_browser_esm","zIndex","position","overflow","className","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","assign","json","Tag"],"mappings":"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","file":"component---src-templates-blog-post-js-a1f24351f135544b3205.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\nimport {css} from '@emotion/core';\n\nimport ThemeProvider from '../components/ThemeProvider';\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Tag from '../components/Tag';\nimport {rhythm, scale} from '../utils/typography';\n\nconst styles = {\n    subtitle: css`\n        display: block;\n        margin-top: ${rhythm(-1)};\n        margin-bottom: ${rhythm(1)};\n        font-size: 1.5rem;\n    `,\n    smallText: css`\n        ${scale(-1 / 5)}\n        display: block;\n        margin-bottom: ${rhythm(1)};\n    `,\n    hr: css`\n        margin-bottom: ${rhythm(1)};\n    `,\n    discuss: css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 20px;\n    `,\n    navigation: css`\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        list-style: none;\n        padding: 0;\n    `,\n    tags: css`\n        display: flex;\n    `\n};\n\n/**\n * Given a post object, build a post page\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst BlogPostTemplate = (props) => {\n    const post = props.data.markdownRemark;\n    const siteTitle = props.data.site.siteMetadata.title;\n    const {previous, next, tags} = props.pageContext;\n    const {title, subtitle, tweet} = post.frontmatter;\n    const keywords = tags.map(tag => tag.text);\n\n    return (\n        <ThemeProvider>\n            <Layout location={props.location} title={siteTitle}>\n                <SEO title={title} description={post.excerpt} keywords={keywords} />\n                <div css={styles.header}>\n                    <h1>{title}</h1>\n                    {subtitle && <strong css={styles.subtitle}>{subtitle}</strong>}\n                    <div css={styles.tags}>\n                        {tags.map(tag => (\n                            <Tag key={tag.text} {...tag} />\n                        ))}\n                    </div>\n                    <p css={styles.smallText}>{post.frontmatter.date}</p>\n                </div>\n                <div dangerouslySetInnerHTML={{__html: post.html}} />\n\n                {tweet && (\n                    <div css={styles.discuss}>\n                        <a href={tweet}>Discuss on twitter</a>\n                    </div>\n                )}\n\n                <hr css={styles.hr} />\n\n                <ul css={styles.navigation}>\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </Layout>\n        </ThemeProvider>\n    );\n};\n\nBlogPostTemplate.propTypes = {\n    data: PropTypes.object.isRequired,\n    pageContext: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(fields: {slug: {eq: $slug}}) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                subtitle\n                date(formatString: \"MMMM DD, YYYY\")\n                tweet\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import {createContext} from 'react';\n\nconst ThemeContext = createContext();\n\nexport default ThemeContext;\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\nimport {css} from '@emotion/core';\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles();\n}\n\n/**\n * Scales a text\n * @param {Number} value - text scale\n * @returns {String} css\n */\nexport const scale = (value) => {\n    const scaled = typography.scale(value);\n\n    return css`\n        font-size: ${scaled.fontSize};\n        line-height: ${scaled.lineHeight};\n    `;\n};\n\nexport const {rhythm} = typography;\nexport default typography;\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\nimport {css} from '@emotion/core';\nimport {FaRegLightbulb, FaLightbulb} from 'react-icons/fa';\n\nimport ThemeContext from './ThemeContext';\nimport {rhythm, scale} from '../utils/typography';\n\nconst styles = {\n    root: css`\n        position: relative;\n        margin-left: auto;\n        margin-right: auto;\n        max-width: ${rhythm(30)};\n        padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n    `,\n    h1: css`\n        ${scale(1.25)}\n        margin-bottom: ${rhythm(1)};\n        margin-top: 0;\n    `,\n    h3: css`\n        font-family: Montserrat, sans-serif;\n        margin-top: 0;\n        margin-bottom: ${rhythm(-1)};\n    `,\n    link: css`\n        box-shadow: none;\n        text-decoration: none;\n        color: inherit;\n    `,\n    toggleTheme: theme => css`\n        position: absolute;\n        right: 0;\n        top: ${rhythm(2)};\n        border: 0;\n        background: ${theme.color};\n        color: ${theme.background};\n        height: 30px;\n        width: 30px;\n        border-radius: 50%;\n    `\n};\n\n/**\n * Builds the base page layout\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst Layout = ({location, title, children}) => {\n    const {theme, toggleTheme} = useContext(ThemeContext);\n\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const tagsPath = `${__PATH_PREFIX__}/tags`;\n    let header;\n\n    if (rootPath === location.pathname || location.pathname.startsWith(tagsPath)) {\n        header = (\n            <h1 css={styles.h1}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h1>\n        );\n    } else {\n        header = (\n            <h3 css={styles.h3}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h3>\n        );\n    }\n    return (\n        <div css={styles.root}>\n            {header}\n            <button aria-label=\"Switch between Dark and Light mode\" css={styles.toggleTheme} onClick={toggleTheme}>\n                {theme === 'light' ? (\n                    <FaLightbulb size=\"0.75rem\" />\n                ) : (\n                    <FaRegLightbulb size=\"0.75rem\" />\n                )}\n            </button>\n            {children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    location: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\n/**\n * Updates header for SEO purposes\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst SEO = ({\n    description, lang, meta, keywords, title\n}) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={(data) => {\n            const metaDescription = description || data.site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: data.site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(keywords.length > 0\n                            ? {\n                                name: 'keywords',\n                                content: keywords.join(', ')\n                            }\n                            : [])\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import {useState, useEffect} from 'react';\n\nexport const palette = {\n    black: '#222222',\n    orange: '#f29d0b',\n    paleGrey: '#f1f5f7',\n    white: '#fff',\n    blue: '#007acc'\n};\n\nexport const getTheme = theme =>\n    (theme === 'light'\n        ? {\n            background: palette.white,\n            color: palette.black,\n            link: palette.blue\n        }\n        : {\n            background: palette.black,\n            color: palette.paleGrey,\n            link: palette.orange\n        });\n\n/**\n * A hook to get and update the current theme for dark mode\n * @returns [theme, toggleTheme] - [current theme, function to toggle theme]\n */\nexport const useTheme = () => {\n    const storedTheme = typeof window !== 'undefined' && window.localStorage.getItem('theme');\n    const [theme, setTheme] = useState(storedTheme || 'dark');\n    const toggleTheme = () => setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            window.localStorage.setItem('theme', theme);\n        }\n    }, [theme]);\n    return [theme, toggleTheme];\n};\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {ThemeProvider as EmotionThemeProvider} from 'emotion-theming';\nimport {Global, css} from '@emotion/core';\n\nimport ThemeContext from './ThemeContext';\nimport {useTheme, getTheme} from '../utils/theme';\nimport PRISM_THEME_LIGHT from '../styles/prism-theme-light';\nimport PRISM_THEME_DARK from '../styles/prism-theme-dark';\n\nconst ThemeProvider = ({children}) => {\n    const [theme, toggleTheme] = useTheme();\n    const currentTheme = getTheme(theme);\n    const lightTheme = getTheme('light');\n    const {color} = currentTheme;\n    const [key, forceUpdate] = useState(0);\n\n    useEffect(() => {\n        // let react take care of dynamic styles\n        forceUpdate(1);\n        // after mounting, remove the class from body\n        document.body.classList.remove('dark');\n    }, []);\n\n    return (\n        <ThemeContext.Provider value={{theme, toggleTheme}}>\n            <EmotionThemeProvider theme={currentTheme}>\n                <Global\n                    styles={css({\n                        body: {\n                            // for rubber band effect in Chrome on MacOS\n                            // and outside the scaled div with background color\n                            backgroundColor: currentTheme.background\n                        },\n                        a: {color: currentTheme.link},\n                        blockquote: {color},\n                        'body.light': {\n                            '.container': {\n                                background: lightTheme.background,\n                                color: lightTheme.color\n                            }\n                        }\n                    })}\n                />\n                <Global styles={css(theme === 'light' ? PRISM_THEME_LIGHT : PRISM_THEME_DARK)} />\n                <div\n                    css={{\n                        color,\n                        zIndex: 1,\n                        position: 'relative',\n                        overflow: 'hidden'\n                    }}\n                    className=\"container\"\n                    key={key}\n                >\n                    {children}\n                </div>\n            </EmotionThemeProvider>\n        </ThemeContext.Provider>\n    );\n};\n\nThemeProvider.propTypes = {\n    children: PropTypes.node.isRequired\n};\n\nexport default ThemeProvider;\n","export default `\n\tcode[class*='language-'],\n\tpre[class*='language-'] {\n\t\tcolor: #657b83; /* base00 */\n\t\tfont-family: 'Fira Mono', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n\t\tfont-size: 16px;\n\t\ttext-align: left;\n\t\twhite-space: pre;\n\t\tword-spacing: normal;\n\t\tword-break: normal;\n\t\tword-wrap: normal;\n\t\ttransition: 0.4s ease;\n\n\t\tline-height: 1.65;\n\n\t\t-moz-tab-size: 2;\n\t\t-o-tab-size: 2;\n\t\ttab-size: 2;\n\n\t\t-webkit-hyphens: none;\n\t\t-moz-hyphens: none;\n\t\t-ms-hyphens: none;\n\t\thyphens: none;\n\t}\n\n\tpre[class*='language-']::-moz-selection,\n\tpre[class*='language-'] ::-moz-selection,\n\tcode[class*='language-']::-moz-selection,\n\tcode[class*='language-'] ::-moz-selection {\n\t\tbackground: #eee8d5; /* base02 */\n\t}\n\n\tpre[class*='language-']::selection,\n\tpre[class*='language-'] ::selection,\n\tcode[class*='language-']::selection,\n\tcode[class*='language-'] ::selection {\n\t\tbackground: #eee8d5; /* base02 */\n\t}\n\n\t/* Code blocks */\n\tpre[class*='language-'] {\n\t\tpadding: 1em;\n\t\tmargin: 0.5em 0 1.5em 0;\n\t\toverflow: auto;\n\t\tborder-radius: 0.3em;\n\t}\n\n\t:not(pre) > code[class*='language-'],\n\tpre[class*='language-'] {\n\t\tbackground-color: rgba(253,246,227,0.5);\n\t}\n\n\t/* handle initial background for dark mode separately to avoid flashing eyes at night */\n\tbody.dark :not(pre) > code[class*='language-'],\n\tbody.dark pre[class*='language-'] {\n\t\tbackground-color: rgba(255, 255, 255, 0.05);\n\t}\n\n\t/* Inline code */\n\t:not(pre) > code[class*='language-'] {\n\t\tcolor: #6c71c4;\n\t\tpadding: 0.1em;\n\t\tborder-radius: 0.3em;\n\t}\n\n\t.token.comment,\n\t.token.prolog,\n\t.token.doctype,\n\t.token.cdata {\n\t\tcolor: #93a1a1; /* base1 */\n\t}\n\n\t.token.punctuation {\n\t\tcolor: #586e75; /* base01 */\n\t}\n\n\t.namespace {\n\t\topacity: 0.7;\n\t}\n\n\t.token.property,\n\t.token.tag,\n\t.token.boolean,\n\t.token.number,\n\t.token.constant,\n\t.token.symbol,\n\t.token.deleted {\n\t\tcolor: #268bd2; /* blue */\n\t}\n\n\t.token.selector,\n\t.token.attr-name,\n\t.token.string,\n\t.token.char,\n\t.token.builtin,\n\t.token.url,\n\t.token.inserted {\n\t\tcolor: #2aa198; /* cyan */\n\t}\n\n\t.token.entity {\n\t\tcolor: #657b83; /* base00 */\n\t\tbackground: #eee8d5; /* base2 */\n\t}\n\n\t.token.atrule,\n\t.token.attr-value {\n\t\tcolor: #859900;\n\t}\n\n\t.token.keyword {\n\t\tcolor: #d33682;\n\t\tfont-style: italic;\n\t}\n\n\t.token.function,\n\t.token.class-name {\n\t\tcolor: #b58900; /* yellow */\n\t}\n\n\t.token.regex,\n\t.token.important,\n\t.token.variable {\n\t\tcolor: #cb4b16; /* orange */\n\t}\n\n\t.token.important,\n\t.token.bold {\n\t\tfont-weight: bold;\n\t}\n\t.token.italic {\n\t\tfont-style: italic;\n\t}\n\n\t.token.entity {\n\t\tcursor: help;\n\t}\n\n\t.gatsby-highlight-code-line {\n\t\tbackground-color: #feb;\n\t\tdisplay: block;\n\t\tmargin-right: -1em;\n\t\tmargin-left: -1em;\n\t\tpadding-right: 1em;\n\t\tpadding-left: 0.75em;\n\t\tborder-left: 0.25em solid #f99;\n\t}\n\n\t/**\n\t * Add back the container background-color, border-radius, padding, margin\n\t * and overflow that we removed from <pre>.\n\t */\n\t.gatsby-highlight {\n\t\tbackground-color: rgba(253,246,227,0.5);\n\t\tborder-radius: 0.3em;\n\t\tmargin: 0.5em 0 1.5em 0;\n\t\tpadding: 1em;\n\t\toverflow: auto;\n\t}\n\n\t/**\n\t * Remove the default PrismJS theme background-color, border-radius, margin,\n\t * padding and overflow.\n\t * 1. Make the element just wide enough to fit its content.\n\t * 2. Always fill the visible space in .gatsby-highlight.\n\t * 3. Adjust the position of the line numbers\n\t */\n\t.gatsby-highlight pre[class*=\"language-\"] {\n\t\tbackground-color: transparent;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toverflow: initial;\n\t\tfloat: left; /* 1 */\n\t\tmin-width: 100%; /* 2 */\n\t}\n`;\n","export default `\n\tcode[class*='language-'],\n\tpre[class*='language-'] {\n\t\tcolor: #e3e8ff; /* base00 */\n\t\tfont-family: 'Fira Mono', Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n\t\tfont-size: 16px;\n\t\ttext-align: left;\n\t\twhite-space: pre;\n\t\tword-spacing: normal;\n\t\tword-break: normal;\n\t\tword-wrap: normal;\n\t\ttransition: 0.4s ease;\n\n\t\tline-height: 1.65;\n\n\t\t-moz-tab-size: 2;\n\t\t-o-tab-size: 2;\n\t\ttab-size: 2;\n\n\t\t-webkit-hyphens: none;\n\t\t-moz-hyphens: none;\n\t\t-ms-hyphens: none;\n\t\thyphens: none;\n\t}\n\n\tpre[class*='language-']::-moz-selection,\n\tpre[class*='language-'] ::-moz-selection,\n\tcode[class*='language-']::-moz-selection,\n\tcode[class*='language-'] ::-moz-selection {\n\t\tbackground: rgba(255, 255, 255, 0.09); /* base02 */\n\t}\n\n\tpre[class*='language-']::selection,\n\tpre[class*='language-'] ::selection,\n\tcode[class*='language-']::selection,\n\tcode[class*='language-'] ::selection {\n\t\tbackground: rgba(255, 255, 255, 0.09); /* base02 */\n\t}\n\n\t/* Code blocks */\n\tpre[class*='language-'] {\n\t\tpadding: 1em;\n\t\tmargin: 0.5em 0 1.5em 0;\n\t\toverflow: auto;\n\t\tborder-radius: 0.3em;\n\t}\n\n\t:not(pre) > code[class*='language-'],\n\tpre[class*='language-'] {\n\t\tbackground-color: rgba(255, 255, 255, 0.05);\n\t}\n\n\t/* Inline code */\n\t:not(pre) > code[class*='language-'] {\n\t\tcolor: #84ffff;\n\t\tpadding: 0.1em;\n\t\tborder-radius: 0.3em;\n\t}\n\n\t.token.comment,\n\t.token.prolog,\n\t.token.doctype,\n\t.token.cdata {\n\t\tcolor: rgba(227,232,255,0.5); /* base1 */\n\t}\n\n\t.token.punctuation {\n\t\tcolor: rgba(227,232,255,0.6); /* base01 */\n\t}\n\n\t.namespace {\n\t\topacity: 0.7;\n\t}\n\n\t.token.property,\n\t.token.tag,\n\t.token.boolean,\n\t.token.number {\n\t\tcolor: #82aaff;\n\t}\n\n\t.token.constant,\n\t.token.symbol,\n\t.token.deleted {\n\t\tcolor: #c792ea /* blue */\n\t}\n\n\t.token.selector,\n\t.token.attr-name,\n\t.token.string,\n\t.token.char,\n\t.token.builtin,\n\t.token.url,\n\t.token.inserted {\n\t\tcolor: #c3e88d; /* cyan */\n\t}\n\n\t.token.entity {\n\t\tcolor: rgba(227,232,255,0.7);\n\t\tbackground: rgba(255, 255, 255, 0.05);\n\t}\n\n\t.token.atrule,\n\t.token.attr-value {\n\t\tcolor: #80cbc4;\n\t}\n\n\t.token.keyword {\n\t\tcolor: #f07178;\n\t\tfont-style: italic;\n\t}\n\n\t.token.function,\n\t.token.class-name {\n\t\tcolor: #ffcb6b; /* yellow */\n\t}\n\n\t.token.regex,\n\t.token.important,\n\t.token.variable {\n\t\tcolor: #f78c6c; /* orange */\n\t}\n\n\t.token.important,\n\t.token.bold {\n\t\tfont-weight: bold;\n\t}\n\t.token.italic {\n\t\tfont-style: italic;\n\t}\n\n\t.token.entity {\n\t\tcursor: help;\n\t}\n\n\t.gatsby-highlight-code-line {\n\t\t/* Use a hex code since rgba causes weird overlays with multiple highlighted lines */\n\t\tbackground-color: #393939;\n\t\tdisplay: block;\n\t\tmargin-right: -1em;\n\t\tmargin-left: -1em;\n\t\tpadding-right: 1em;\n\t\tpadding-left: 0.75em;\n\t\tborder-left: 0.25em solid #f78c6c;\n\t}\n\n\t/**\n\t * Add back the container background-color, border-radius, padding, margin\n\t * and overflow that we removed from <pre>.\n\t */\n\t.gatsby-highlight {\n\t\tbackground-color: rgba(255, 255, 255, 0.05);\n\t\tborder-radius: 0.3em;\n\t\tmargin: 0.5em 0 1.5em 0;\n\t\tpadding: 1em;\n\t\toverflow: auto;\n\t}\n\n\t/**\n\t * Remove the default PrismJS theme background-color, border-radius, margin,\n\t * padding and overflow.\n\t * 1. Make the element just wide enough to fit its content.\n\t * 2. Always fill the visible space in .gatsby-highlight.\n\t * 3. Adjust the position of the line numbers\n\t */\n\t.gatsby-highlight pre[class*=\"language-\"] {\n\t\tbackground-color: transparent;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toverflow: initial;\n\t\tfloat: left; /* 1 */\n\t\tmin-width: 100%; /* 2 */\n\t}\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {css} from '@emotion/core';\nimport {Link} from 'gatsby';\n\nconst styles = {\n    a: theme => css`\n        display: flex;\n        align-items: center;\n        border: 1px solid ${theme.link};\n        border-radius: 5px;\n        padding: 0 5px;\n        margin-right: 5px;\n        box-shadow: none;\n        font-size: 0.75rem;\n    `\n};\n\n/**\n *\n * @param {Object} props - props\n * @returns {React.ReactNode} node\n */\nconst Tag = ({link, text}) => (\n    <Link css={styles.a} to={link}>\n        {text}\n    </Link>\n);\n\nTag.propTypes = {\n    text: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n};\n\nexport default Tag;\n"],"sourceRoot":""}