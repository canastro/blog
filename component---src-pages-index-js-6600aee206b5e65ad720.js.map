{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js"],"names":["styles","root","display","flexDirection","marginBottom","rhythm","gravatar","marginRight","description","flex","social","justifyContent","width","alignSelf","Bio","react_default","a","createElement","gatsby_browser_entry","query","render","data","_data$site$siteMetada","site","siteMetadata","author","style","dist_default","size","email","href","title","twitter","fa","linkedin","stackoverflow","_2417018894","__webpack_require__","d","__webpack_exports__","pageQuery","BlogIndex","_ref","location","siteTitle","posts","allMarkdownRemark","edges","Layout","Seo","keywords","components_Bio","map","_ref2","node","frontmatter","fields","slug","key","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","propTypes","PropTypes","object","isRequired","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","string","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","marginLeft","maxWidth","padding","h1","marginTop","h3","fontFamily","link","textDecoration","color","footer","alignItems","backgroundColor","header","__PATH_PREFIX__","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_2__","role","aria-label","any","SEO","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-6600aee206b5e65ad720.js","sourcesContent":["import React from 'react';\nimport {StaticQuery, graphql} from 'gatsby';\nimport Gravatar from 'react-gravatar';\nimport {FaTwitter, FaStackOverflow, FaLinkedin} from 'react-icons/fa';\n\nimport {rhythm} from '../utils/typography';\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: rhythm(2.5)\n    },\n    gravatar: {\n        marginRight: rhythm(1 / 2),\n        marginBottom: 0\n    },\n    description: {\n        flex: 1\n    },\n    social: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        width: 150,\n        alignSelf: 'center'\n    }\n};\n\nconst bioQuery = graphql`\n    query BioQuery {\n        site {\n            siteMetadata {\n                author\n                social {\n                    twitter\n                }\n            }\n        }\n    }\n`;\n\n/**\n * Builds the Bio section\n * @returns {React.ReactNode} node\n */\nconst Bio = () => (\n    <StaticQuery\n        query={bioQuery}\n        render={(data) => {\n            const {author, social} = data.site.siteMetadata;\n            return (\n                <div style={styles.root}>\n                    <div style={{display: 'flex'}}>\n                        <div style={styles.gravatar}>\n                            <Gravatar size={75} email=\"ricardocanastro@gmail.com\" />\n                        </div>\n\n                        <p style={styles.description}>\n                            <strong>&#x22;Canastro's Notes&#x22;</strong>, is a software development\n                            (mainly javascript) blog written by <strong>{author}</strong> a Software\n                            Developer based in Porto, Portugal and currently working for\n                            {' '}<a href=\"//www.dashdash.com\">dashdash</a>.\n                        </p>\n                    </div>\n                    <div style={styles.social}>\n                        <a title=\"twitter\" href={social.twitter}>\n                            <FaTwitter />\n                        </a>\n                        <a title=\"linkedin\" href={social.linkedin}>\n                            <FaLinkedin />\n                        </a>\n                        <a title=\"stackoverflow\" href={social.stackoverflow}>\n                            <FaStackOverflow />\n                        </a>\n                    </div>\n                </div>\n            );\n        }}\n    />\n);\n\nexport default Bio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport {rhythm} from '../utils/typography';\n\n/**\n * Builds the index page of the blog\n * @return {React.ReactNode} node\n */\nconst BlogIndex = ({data, location}) => {\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"All posts\" keywords={['blog', 'gatsby', 'javascript', 'react']} />\n            <Bio />\n            {posts.map(({node}) => {\n                const title = node.frontmatter.title || node.fields.slug;\n                return (\n                    <div key={node.fields.slug}>\n                        <h3\n                            style={{\n                                marginBottom: rhythm(1 / 4)\n                            }}\n                        >\n                            <Link style={{boxShadow: 'none'}} to={node.fields.slug}>\n                                {title}\n                            </Link>\n                        </h3>\n                        <small>{node.frontmatter.date}</small>\n                        <p dangerouslySetInnerHTML={{__html: node.excerpt}} />\n                    </div>\n                );\n            })}\n        </Layout>\n    );\n};\n\nBlogIndex.propTypes = {\n    data: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => ({\n    'a.gatsby-resp-image-link': {\n        boxShadow: 'none'\n    }\n});\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles();\n}\n\nexport default typography;\nexport const {rhythm, scale} = typography;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\nimport 'prismjs/themes/prism-okaidia.css';\n\nimport {rhythm, scale} from '../utils/typography';\n\nconst styles = {\n    root: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n    },\n    h1: {\n        ...scale(1.5),\n        marginBottom: rhythm(1.5),\n        marginTop: 0\n    },\n    h3: {\n        fontFamily: 'Montserrat, sans-serif',\n        marginTop: 0,\n        marginBottom: rhythm(-1)\n    },\n    link: {\n        boxShadow: 'none',\n        textDecoration: 'none',\n        color: 'inherit'\n    },\n    footer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: rhythm(3 / 4),\n        backgroundColor: '#000',\n        color: '#fff'\n    }\n};\n\n/**\n * Builds the base page layout\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst Layout = ({location, title, children}) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n        header = (\n            <h1 style={styles.h1}>\n                <Link style={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h1>\n        );\n    } else {\n        header = (\n            <h3 style={styles.h3}>\n                <Link style={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h3>\n        );\n    }\n    return (\n        <Fragment>\n            <div style={styles.root}>\n                {header}\n                {children}\n            </div>\n            <footer style={styles.footer}>\n                <span>\n                    <span role=\"img\" aria-label=\"copyright\">\n                        ©\n                    </span>{' '}\n                    2019, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n                </span>\n            </footer>\n        </Fragment>\n    );\n};\n\nLayout.propTypes = {\n    location: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\n/**\n * Updates header for SEO purposes\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst SEO = ({\n    description, lang, meta, keywords, title\n}) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={(data) => {\n            const metaDescription = description || data.site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: data.site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(keywords.length > 0\n                            ? {\n                                name: 'keywords',\n                                content: keywords.join(', ')\n                            }\n                            : [])\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}