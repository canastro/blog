{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Tag.js"],"names":["styles","post","marginBottom","rhythm","h3","marginTop","link","boxShadow","p","tags","display","titleWrapper","subtitle","color","fontWeight","BlogIndex","_ref","data","location","_data$site$siteMetada","site","siteMetadata","siteTitle","title","keywords","posts","allMarkdownRemark","edges","Glamor","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","_components_Seo__WEBPACK_IMPORTED_MODULE_8__","_components_Bio__WEBPACK_IMPORTED_MODULE_6__","map","_ref2","node","_node$frontmatter","frontmatter","path","_node$frontmatter$tit","fields","slug","tag","text","kebabCase","css","key","date","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","dangerouslySetInnerHTML","__html","excerpt","_components_Tag__WEBPACK_IMPORTED_MODULE_9__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","propTypes","PropTypes","object","isRequired","pageQuery","root","alignItems","border","borderRadius","padding","marginRight","&:hover","backgroundColor","a","fontSize","Tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","string"],"mappings":"gRAWMA,EAAS,CACXC,KAAM,CACFC,aAAcC,YAAO,IAEzBC,GAAI,CACAC,UAAWF,YAAO,KAClBD,aAAcC,YAAO,MAEzBG,KAAM,CAACC,UAAW,QAClBC,EAAG,CAACN,aAAc,IAClBO,KAAM,CAACC,QAAS,QAChBC,aAAc,CACVT,aAAcC,YAAO,MAEzBS,SAAU,CACNC,MAAO,QACPC,WAAY,MAQdC,EAAY,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,SAAcC,EACCF,EAAKG,KAAKC,aAAjCC,EADsBH,EAC7BI,MAAkBC,EADWL,EACXK,SACnBC,EAAQR,EAAKS,kBAAkBC,MAErC,OACIC,EAAAC,cAACC,EAAA,EAAD,CAAQZ,SAAUA,EAAUK,MAAOD,GAC/BM,EAAAC,cAACE,EAAA,EAAD,CAAKR,MAAM,YAAYC,SAAUA,IACjCI,EAAAC,cAACG,EAAA,EAAD,MACCP,EAAMQ,IAAI,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KAAUC,EACgCD,EAAKE,YAAjDzB,EADYwB,EACZxB,SAAU0B,EADEF,EACFE,KADEC,EAAAH,EACIb,aADJ,IAAAgB,EACYJ,EAAKK,OAAOC,KADxBF,EAEb9B,EAAO0B,EAAKE,YAAY5B,KAAKwB,IAAI,SAAAS,GAAG,MAAK,CAC3CC,KAAMD,EACNpC,KAAI,SAAWsC,IAAUF,GAArB,OAGR,OACId,EAAAC,cAAA,OAAKgB,IAAK7C,EAAOC,KAAM6C,IAAKX,EAAKK,OAAOC,MACpCb,EAAAC,cAAA,aAAQM,EAAKE,YAAYU,MACzBnB,EAAAC,cAAA,OAAKgB,IAAK7C,EAAOW,cACbiB,EAAAC,cAAA,MAAIgB,IAAK7C,EAAOI,IACZwB,EAAAC,cAACmB,EAAA,KAAD,CAAMH,IAAK7C,EAAOM,KAAM2C,GAAIX,GACvBf,IAGRX,GAAYgB,EAAAC,cAAA,QAAMgB,IAAK7C,EAAOY,UAAWA,IAE9CgB,EAAAC,cAAA,KAAGgB,IAAK7C,EAAOQ,EAAG0C,wBAAyB,CAACC,OAAQhB,EAAKiB,WACzDxB,EAAAC,cAAA,OAAKgB,IAAK7C,EAAOS,MACZA,EAAKwB,IAAI,SAAAS,GAAG,OACTd,EAAAC,cAACwB,EAAA,EAADC,IAAA,CAAKR,IAAKJ,EAAIC,MAAUD,YAUxD3B,EAAUwC,UAAY,CAClBtC,KAAMuC,IAAUC,OAAOC,WACvBxC,SAAUsC,IAAUC,OAAOC,YAGhB3C,YAER,IAAM4C,EAAS,sHC5EhB3D,EAAS,CACX4D,KAAM,CACFlD,QAAS,OACTmD,WAAY,SACZC,OAAQ,oBACRC,aAAc,EACdC,QAAS,QACTC,YAAa,EACbC,UAAW,CACPC,gBAAiB,YAGzBC,EAAG,CACC7D,UAAW,OACX8D,SAAU,YASZC,EAAM,SAAAtD,GAAA,IAAEV,EAAFU,EAAEV,KAAMqC,EAAR3B,EAAQ2B,KAAR,OACRf,EAAAC,cAAA,OAAKgB,IAAK7C,EAAO4D,MACbhC,EAAAC,cAAC0C,EAAA,KAAD,CAAM1B,IAAK7C,EAAOoE,EAAGnB,GAAI3C,GACpBqC,KAKb2B,EAAIf,UAAY,CACZZ,KAAMa,IAAUgB,OAAOd,WACvBpD,KAAMkD,IAAUgB,OAAOd,YAGZY","file":"component---src-pages-index-js-47ea06df475162e14fc9.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Tag from '../components/Tag';\nimport {rhythm} from '../utils/typography';\n\nconst styles = {\n    post: {\n        marginBottom: rhythm(2)\n    },\n    h3: {\n        marginTop: rhythm(1 / 4),\n        marginBottom: rhythm(1 / 4)\n    },\n    link: {boxShadow: 'none'},\n    p: {marginBottom: 15},\n    tags: {display: 'flex'},\n    titleWrapper: {\n        marginBottom: rhythm(1 / 4)\n    },\n    subtitle: {\n        color: 'black',\n        fontWeight: 700\n    }\n};\n\n/**\n * Builds the index page of the blog\n * @return {React.ReactNode} node\n */\nconst BlogIndex = ({data, location}) => {\n    const {title: siteTitle, keywords} = data.site.siteMetadata;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"All posts\" keywords={keywords} />\n            <Bio />\n            {posts.map(({node}) => {\n                const {subtitle, path, title = node.fields.slug} = node.frontmatter;\n                const tags = node.frontmatter.tags.map(tag => ({\n                    text: tag,\n                    link: `/tags/${kebabCase(tag)}/`\n                }));\n\n                return (\n                    <div css={styles.post} key={node.fields.slug}>\n                        <small>{node.frontmatter.date}</small>\n                        <div css={styles.titleWrapper}>\n                            <h3 css={styles.h3}>\n                                <Link css={styles.link} to={path}>\n                                    {title}\n                                </Link>\n                            </h3>\n                            {subtitle && <span css={styles.subtitle}>{subtitle}</span>}\n                        </div>\n                        <p css={styles.p} dangerouslySetInnerHTML={{__html: node.excerpt}} />\n                        <div css={styles.tags}>\n                            {tags.map(tag => (\n                                <Tag key={tag.text} {...tag} />\n                            ))}\n                        </div>\n                    </div>\n                );\n            })}\n        </Layout>\n    );\n};\n\nBlogIndex.propTypes = {\n    data: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n                keywords\n            }\n        }\n        allMarkdownRemark(\n            sort: {fields: [frontmatter___date], order: DESC}\n            filter: {frontmatter: {draft: {ne: true}}}\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        subtitle\n                        tags\n                        path\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Link} from 'gatsby';\n\nconst styles = {\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        border: '1px solid #007acc',\n        borderRadius: 5,\n        padding: '0 5px',\n        marginRight: 5,\n        '&:hover': {\n            backgroundColor: '#e6f5ff'\n        }\n    },\n    a: {\n        boxShadow: 'none',\n        fontSize: '0.75rem'\n    }\n};\n\n/**\n *\n * @param {Object} props - props\n * @returns {React.ReactNode} node\n */\nconst Tag = ({link, text}) => (\n    <div css={styles.root}>\n        <Link css={styles.a} to={link}>\n            {text}\n        </Link>\n    </div>\n);\n\nTag.propTypes = {\n    text: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n};\n\nexport default Tag;\n"],"sourceRoot":""}