{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/theme.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Tag.js"],"names":["styles","subtitle","css","rhythm","smallText","scale","hr","navigation","name","tags","BlogPostTemplate","props","post","data","markdownRemark","siteTitle","site","siteMetadata","title","_props$pageContext","pageContext","previous","next","_post$frontmatter","frontmatter","keywords","map","tag","text","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_Seo__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","header","_components_Tag__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","key","date","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","rel","propTypes","PropTypes","object","isRequired","pageQuery","StaticQueryContext","React","createContext","StaticQuery","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","query","render","children","graphql","Error","string","func","__webpack_require__","d","__webpack_exports__","palette","primary","orange","gray","white","color","link","body","blockquote","m","module","exports","require","default","Wordpress2016","overrideThemeStyles","h1","h2, h3, h4","a","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","value","scaled","fontSize","lineHeight","globalStyles","root","h3","Layout","_ref","__PATH_PREFIX__","pathname","startsWith","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_5__","any","SEO","lang","meta","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","array","arrayOf","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","assign","json","shape","Tag"],"mappings":"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","file":"component---src-templates-blog-post-js-dfae161cbd4cc5cee727.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\nimport {css} from '@emotion/core';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Tag from '../components/Tag';\nimport {rhythm, scale} from '../utils/typography';\n\nconst styles = {\n    subtitle: css`\n        display: block;\n        margin-top: ${rhythm(-1)};\n        margin-bottom: ${rhythm(1)};\n        font-size: 1.5rem;\n    `,\n    smallText: css`\n        ${scale(-1 / 5)}\n        display: block;\n        margin-bottom: ${rhythm(1)};\n    `,\n    hr: css`\n        margin-bottom: ${rhythm(1)};\n    `,\n    navigation: css`\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        list-style: none;\n        padding: 0;\n    `,\n    tags: css`\n        display: flex;\n    `\n};\n\n/**\n * Given a post object, build a post page\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst BlogPostTemplate = (props) => {\n    const post = props.data.markdownRemark;\n    const siteTitle = props.data.site.siteMetadata.title;\n    const {previous, next, tags} = props.pageContext;\n    const {title, subtitle} = post.frontmatter;\n    const keywords = tags.map(tag => tag.text);\n\n    return (\n        <Layout location={props.location} title={siteTitle}>\n            <SEO title={title} description={post.excerpt} keywords={keywords} />\n            <div css={styles.header}>\n                <h1>{title}</h1>\n                {subtitle && <strong css={styles.subtitle}>{subtitle}</strong>}\n                <div css={styles.tags}>\n                    {tags.map(tag => (\n                        <Tag key={tag.text} {...tag} />\n                    ))}\n                </div>\n                <p css={styles.smallText}>{post.frontmatter.date}</p>\n            </div>\n            <div dangerouslySetInnerHTML={{__html: post.html}} />\n\n            <hr css={styles.hr} />\n\n            <ul css={styles.navigation}>\n                <li>\n                    {previous && (\n                        <Link to={previous.fields.slug} rel=\"prev\">\n                            ‚Üê {previous.frontmatter.title}\n                        </Link>\n                    )}\n                </li>\n                <li>\n                    {next && (\n                        <Link to={next.fields.slug} rel=\"next\">\n                            {next.frontmatter.title} ‚Üí\n                        </Link>\n                    )}\n                </li>\n            </ul>\n        </Layout>\n    );\n};\n\nBlogPostTemplate.propTypes = {\n    data: PropTypes.object.isRequired,\n    pageContext: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(fields: {slug: {eq: $slug}}) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                subtitle\n                date(formatString: \"MMMM DD, YYYY\")\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","export const palette = {\n    primary: '#222222',\n    orange: '#f29d0b',\n    gray: '#f1f5f7',\n    white: '#fff'\n};\n\nexport const text = {\n    title: {color: palette.white},\n    subtitle: {color: palette.white},\n    link: {color: palette.orange},\n    body: {color: palette.gray},\n    blockquote: {color: palette.gray}\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\nimport {css} from '@emotion/core';\nimport {text} from './theme';\n\nWordpress2016.overrideThemeStyles = () => ({\n    h1: {\n        color: text.title.color\n    },\n    'h2, h3, h4': {\n        color: text.subtitle.color\n    },\n    blockquote: {\n        color: text.blockquote.color\n    },\n    a: {\n        color: text.link.color\n    },\n    'a.gatsby-resp-image-link': {\n        boxShadow: 'none'\n    }\n});\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles();\n}\n\n/**\n * Scales a text\n * @param {Number} value - text scale\n * @returns {String} css\n */\nexport const scale = (value) => {\n    const scaled = typography.scale(value);\n\n    return css`\n        font-size: ${scaled.fontSize};\n        line-height: ${scaled.lineHeight};\n    `;\n};\n\nexport const {rhythm} = typography;\nexport default typography;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\nimport {css, Global} from '@emotion/core';\n\nimport 'prismjs/themes/prism-okaidia.css';\nimport './prism.css';\nimport {palette, text} from '../utils/theme';\nimport {rhythm, scale} from '../utils/typography';\n\nconst globalStyles = css`\n    body {\n        background: ${palette.primary};\n        color: ${text.body.color};\n    }\n`;\n\nconst styles = {\n    root: css`\n        margin-left: auto;\n        margin-right: auto;\n        max-width: ${rhythm(30)};\n        padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n    `,\n    h1: css`\n        ${scale(1.25)}\n        margin-bottom: ${rhythm(1)};\n        margin-top: 0;\n    `,\n    h3: css`\n        font-family: Montserrat, sans-serif;\n        margin-top: 0;\n        margin-bottom: ${rhythm(-1)};\n    `,\n    link: css`\n        box-shadow: none;\n        text-decoration: none;\n        color: inherit;\n    `\n};\n\n/**\n * Builds the base page layout\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst Layout = ({location, title, children}) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const tagsPath = `${__PATH_PREFIX__}/tags`;\n    let header;\n\n    if (rootPath === location.pathname || location.pathname.startsWith(tagsPath)) {\n        header = (\n            <h1 css={styles.h1}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h1>\n        );\n    } else {\n        header = (\n            <h3 css={styles.h3}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h3>\n        );\n    }\n    return (\n        <div css={styles.root}>\n            <Global styles={globalStyles} />\n            {header}\n            {children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    location: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\n/**\n * Updates header for SEO purposes\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst SEO = ({\n    description, lang, meta, keywords, title\n}) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={(data) => {\n            const metaDescription = description || data.site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: data.site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(keywords.length > 0\n                            ? {\n                                name: 'keywords',\n                                content: keywords.join(', ')\n                            }\n                            : [])\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {css} from '@emotion/core';\nimport {Link} from 'gatsby';\n\nimport {palette} from '../utils/theme';\n\nconst styles = {\n    root: css`\n        display: flex;\n        align-items: center;\n        border: 1px solid ${palette.orange};\n        border-radius: 5px;\n        padding: 0 5px;\n        margin-right: 5px;\n        :hover {\n            background-color: #4c5156;\n        }\n    `,\n    a: css`\n        box-shadow: none;\n        font-size: 0.75rem;\n    `\n};\n\n/**\n *\n * @param {Object} props - props\n * @returns {React.ReactNode} node\n */\nconst Tag = ({link, text}) => (\n    <div css={styles.root}>\n        <Link css={styles.a} to={link}>\n            {text}\n        </Link>\n    </div>\n);\n\nTag.propTypes = {\n    text: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n};\n\nexport default Tag;\n"],"sourceRoot":""}