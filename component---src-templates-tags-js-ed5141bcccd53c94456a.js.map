{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/ThemeContext.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Bio.js"],"names":["Tags","_ref","pageContext","data","location","siteTitle","site","siteMetadata","title","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_Seo__WEBPACK_IMPORTED_MODULE_4__","description","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","map","_ref2","_node$frontmatter","node","frontmatter","path","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","pageQuery","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","scale","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","Wordpress2016","googleFonts","typography","Typography","value","scaled","css","fontSize","lineHeight","react__WEBPACK_IMPORTED_MODULE_0__","ThemeContext","styles","root","h1","h3","link","name","toggleTheme","theme","color","background","Layout","header","_useContext","useContext","__PATH_PREFIX__","pathname","startsWith","gatsby__WEBPACK_IMPORTED_MODULE_4__","onClick","react_icons_fa__WEBPACK_IMPORTED_MODULE_5__","SEO","lang","meta","keywords","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","assign","json","social","Bio","gatsby__WEBPACK_IMPORTED_MODULE_3__","href","twitter","react_icons_fa__WEBPACK_IMPORTED_MODULE_4__","linkedin","stackoverflow","_public_static_d_3268991543_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-tags-js-ed5141bcccd53c94456a.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\n\n// Components\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Bio from '../components/Bio';\n\n/**\n * Tags page\n * @param {Object} props - props\n * @returns {React.ReactNode} tags page\n */\nconst Tags = ({pageContext, data, location}) => {\n    const {title: siteTitle} = data.site.siteMetadata;\n    const {tag} = pageContext;\n    const {edges, totalCount} = data.allMarkdownRemark;\n    const tagHeader = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${tag}\"`;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title={tag} description={tagHeader} />\n            <Bio />\n            <h4>{tagHeader}</h4>\n            <ul>\n                {edges.map(({node}) => {\n                    const {path, title} = node.frontmatter;\n                    return (\n                        <li key={path}>\n                            <Link to={path}>{title}</Link>\n                        </li>\n                    );\n                })}\n            </ul>\n            {/*\n              This links to a page that does not yet exist.\n              We'll come back to it!\n            */}\n            <Link to=\"/tags\">All tags</Link>\n        </Layout>\n    );\n};\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(PropTypes.shape({\n                node: PropTypes.shape({\n                    frontmatter: PropTypes.shape({\n                        path: PropTypes.string.isRequired,\n                        title: PropTypes.string.isRequired\n                    })\n                })\n            }).isRequired)\n        }),\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                title: PropTypes.string.isRequired\n            })\n        })\n    }),\n    location: PropTypes.object.isRequired\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            sort: {fields: [frontmatter___date], order: DESC}\n            filter: {frontmatter: {tags: {in: [$tag]}}}\n        ) {\n            totalCount\n            edges {\n                node {\n                    frontmatter {\n                        path\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\nimport {css} from '@emotion/core';\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles();\n}\n\n/**\n * Scales a text\n * @param {Number} value - text scale\n * @returns {String} css\n */\nexport const scale = (value) => {\n    const scaled = typography.scale(value);\n\n    return css`\n        font-size: ${scaled.fontSize};\n        line-height: ${scaled.lineHeight};\n    `;\n};\n\nexport const {rhythm} = typography;\nexport default typography;\n","import {createContext} from 'react';\n\nconst ThemeContext = createContext();\n\nexport default ThemeContext;\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\nimport {css} from '@emotion/core';\nimport {FaRegLightbulb, FaLightbulb} from 'react-icons/fa';\n\nimport ThemeContext from './ThemeContext';\nimport {rhythm, scale} from '../utils/typography';\n\nconst styles = {\n    root: css`\n        position: relative;\n        margin-left: auto;\n        margin-right: auto;\n        max-width: ${rhythm(30)};\n        padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n    `,\n    h1: css`\n        ${scale(1.25)}\n        margin-bottom: ${rhythm(1)};\n        margin-top: 0;\n    `,\n    h3: css`\n        font-family: Montserrat, sans-serif;\n        margin-top: 0;\n        margin-bottom: ${rhythm(-1)};\n    `,\n    link: css`\n        box-shadow: none;\n        text-decoration: none;\n        color: inherit;\n    `,\n    toggleTheme: theme => css`\n        position: absolute;\n        right: 0;\n        top: ${rhythm(1.5)};\n        border: 0;\n        background: ${theme.color};\n        color: ${theme.background};\n        height: 40px;\n        width: 40px;\n        border-radius: 50%;\n    `\n};\n\n/**\n * Builds the base page layout\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst Layout = ({location, title, children}) => {\n    const {theme, toggleTheme} = useContext(ThemeContext);\n\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const tagsPath = `${__PATH_PREFIX__}/tags`;\n    let header;\n\n    if (rootPath === location.pathname || location.pathname.startsWith(tagsPath)) {\n        header = (\n            <h1 css={styles.h1}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h1>\n        );\n    } else {\n        header = (\n            <h3 css={styles.h3}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h3>\n        );\n    }\n    return (\n        <div css={styles.root}>\n            {header}\n            <button css={styles.toggleTheme} onClick={toggleTheme}>\n                {theme === 'light' ? <FaLightbulb /> : <FaRegLightbulb />}\n            </button>\n            {children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    location: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\n/**\n * Updates header for SEO purposes\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst SEO = ({\n    description, lang, meta, keywords, title\n}) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={(data) => {\n            const metaDescription = description || data.site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: data.site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(keywords.length > 0\n                            ? {\n                                name: 'keywords',\n                                content: keywords.join(', ')\n                            }\n                            : [])\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport {StaticQuery, graphql} from 'gatsby';\nimport {FaTwitter, FaStackOverflow, FaLinkedin} from 'react-icons/fa';\nimport {css} from '@emotion/core';\n\nimport {rhythm} from '../utils/typography';\n\nconst styles = {\n    root: css`\n        display: flex;\n        flex-direction: column;\n        margin-bottom: ${rhythm(1)};\n    `,\n    social: css`\n        display: flex;\n        justify-content: space-around;\n        width: 150px;\n        align-self: center;\n    `\n};\n\nconst bioQuery = graphql`\n    query BioQuery {\n        site {\n            siteMetadata {\n                author\n                social {\n                    linkedin\n                    stackoverflow\n                    twitter\n                }\n            }\n        }\n    }\n`;\n\n/**\n * Builds the Bio section\n * @returns {React.ReactNode} node\n */\nconst Bio = () => (\n    <StaticQuery\n        query={bioQuery}\n        render={(data) => {\n            const {social} = data.site.siteMetadata;\n            return (\n                <div css={styles.root}>\n                    <div css={styles.social}>\n                        <a title=\"twitter\" href={social.twitter}>\n                            <FaTwitter />\n                        </a>\n                        <a title=\"linkedin\" href={social.linkedin}>\n                            <FaLinkedin />\n                        </a>\n                        <a title=\"stackoverflow\" href={social.stackoverflow}>\n                            <FaStackOverflow />\n                        </a>\n                    </div>\n                </div>\n            );\n        }}\n    />\n);\n\nexport default Bio;\n"],"sourceRoot":""}