{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/theme.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/Seo.js","webpack:///./src/components/Tag.js"],"names":["styles","subtitle","css","rhythm","smallText","scale","hr","navigation","name","tags","BlogPostTemplate","props","post","data","markdownRemark","siteTitle","site","siteMetadata","title","_props$pageContext","pageContext","previous","next","_post$frontmatter","frontmatter","keywords","map","tag","text","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_Seo__WEBPACK_IMPORTED_MODULE_5__","description","excerpt","header","_components_Tag__WEBPACK_IMPORTED_MODULE_6__","_extends","key","date","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","pageQuery","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","children","Consumer","__webpack_require__","d","__webpack_exports__","palette","primary","orange","gray","white","color","link","body","blockquote","m","module","exports","require","default","Wordpress2016","overrideThemeStyles","h1","h2, h3, h4","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","value","scaled","fontSize","lineHeight","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","assign","json","globalStyles","root","h3","Layout","__PATH_PREFIX__","pathname","startsWith","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_4__","SEO","lang","meta","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","Tag"],"mappings":"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","file":"component---src-templates-blog-post-js-1f2fbfca2b9c894e98b7.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, graphql} from 'gatsby';\nimport {css} from '@emotion/core';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/Seo';\nimport Tag from '../components/Tag';\nimport {rhythm, scale} from '../utils/typography';\n\nconst styles = {\n    subtitle: css`\n        display: block;\n        margin-top: ${rhythm(-1)};\n        margin-bottom: ${rhythm(1)};\n        font-size: 1.5rem;\n    `,\n    smallText: css`\n        ${scale(-1 / 5)}\n        display: block;\n        margin-bottom: ${rhythm(1)};\n    `,\n    hr: css`\n        margin-bottom: ${rhythm(1)};\n    `,\n    navigation: css`\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        list-style: none;\n        padding: 0;\n    `,\n    tags: css`\n        display: flex;\n    `\n};\n\n/**\n * Given a post object, build a post page\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst BlogPostTemplate = (props) => {\n    const post = props.data.markdownRemark;\n    const siteTitle = props.data.site.siteMetadata.title;\n    const {previous, next, tags} = props.pageContext;\n    const {title, subtitle} = post.frontmatter;\n    const keywords = tags.map(tag => tag.text);\n\n    return (\n        <Layout location={props.location} title={siteTitle}>\n            <SEO title={title} description={post.excerpt} keywords={keywords} />\n            <div css={styles.header}>\n                <h1>{title}</h1>\n                {subtitle && <strong css={styles.subtitle}>{subtitle}</strong>}\n                <div css={styles.tags}>\n                    {tags.map(tag => (\n                        <Tag key={tag.text} {...tag} />\n                    ))}\n                </div>\n                <p css={styles.smallText}>{post.frontmatter.date}</p>\n            </div>\n            <div dangerouslySetInnerHTML={{__html: post.html}} />\n\n            <hr css={styles.hr} />\n\n            <ul css={styles.navigation}>\n                <li>\n                    {previous && (\n                        <Link to={previous.fields.slug} rel=\"prev\">\n                            ← {previous.frontmatter.title}\n                        </Link>\n                    )}\n                </li>\n                <li>\n                    {next && (\n                        <Link to={next.fields.slug} rel=\"next\">\n                            {next.frontmatter.title} →\n                        </Link>\n                    )}\n                </li>\n            </ul>\n        </Layout>\n    );\n};\n\nBlogPostTemplate.propTypes = {\n    data: PropTypes.object.isRequired,\n    pageContext: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(fields: {slug: {eq: $slug}}) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                subtitle\n                date(formatString: \"MMMM DD, YYYY\")\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","export const palette = {\n    primary: '#222222',\n    orange: '#f29d0b',\n    gray: '#f1f5f7',\n    white: '#fff'\n};\n\nexport const text = {\n    title: {color: palette.white},\n    subtitle: {color: palette.white},\n    link: {color: palette.orange},\n    body: {color: palette.gray},\n    blockquote: {color: palette.gray}\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\nimport {css} from '@emotion/core';\nimport {text} from './theme';\n\nWordpress2016.overrideThemeStyles = () => ({\n    h1: {\n        color: text.title.color\n    },\n    'h2, h3, h4': {\n        color: text.subtitle.color\n    },\n    blockquote: {\n        color: text.blockquote.color\n    },\n    a: {\n        color: text.link.color\n    },\n    'a.gatsby-resp-image-link': {\n        boxShadow: 'none'\n    }\n});\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n    typography.injectStyles();\n}\n\n/**\n * Scales a text\n * @param {Number} value - text scale\n * @returns {String} css\n */\nexport const scale = (value) => {\n    const scaled = typography.scale(value);\n\n    return css`\n        font-size: ${scaled.fontSize};\n        line-height: ${scaled.lineHeight};\n    `;\n};\n\nexport const {rhythm} = typography;\nexport default typography;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\nimport {css, Global} from '@emotion/core';\n\nimport 'prismjs/themes/prism-okaidia.css';\nimport './prism.css';\nimport {palette, text} from '../utils/theme';\nimport {rhythm, scale} from '../utils/typography';\n\nconst globalStyles = css`\n    body {\n        background: ${palette.primary};\n        color: ${text.body.color};\n    }\n`;\n\nconst styles = {\n    root: css`\n        margin-left: auto;\n        margin-right: auto;\n        max-width: ${rhythm(30)};\n        padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n    `,\n    h1: css`\n        ${scale(1.25)}\n        margin-bottom: ${rhythm(1)};\n        margin-top: 0;\n    `,\n    h3: css`\n        font-family: Montserrat, sans-serif;\n        margin-top: 0;\n        margin-bottom: ${rhythm(-1)};\n    `,\n    link: css`\n        box-shadow: none;\n        text-decoration: none;\n        color: inherit;\n    `\n};\n\n/**\n * Builds the base page layout\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst Layout = ({location, title, children}) => {\n    const rootPath = `${__PATH_PREFIX__}/`;\n    const tagsPath = `${__PATH_PREFIX__}/tags`;\n    let header;\n\n    if (rootPath === location.pathname || location.pathname.startsWith(tagsPath)) {\n        header = (\n            <h1 css={styles.h1}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h1>\n        );\n    } else {\n        header = (\n            <h3 css={styles.h3}>\n                <Link css={styles.link} to=\"/\">\n                    {title}\n                </Link>\n            </h3>\n        );\n    }\n    return (\n        <div css={styles.root}>\n            <Global styles={globalStyles} />\n            {header}\n            {children}\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    location: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport {StaticQuery, graphql} from 'gatsby';\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n\n/**\n * Updates header for SEO purposes\n * @param {Object} props - component props\n * @returns {React.ReactNode} - node\n */\nconst SEO = ({\n    description, lang, meta, keywords, title\n}) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={(data) => {\n            const metaDescription = description || data.site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: data.site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(keywords.length > 0\n                            ? {\n                                name: 'keywords',\n                                content: keywords.join(', ')\n                            }\n                            : [])\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {css} from '@emotion/core';\nimport {Link} from 'gatsby';\n\nimport {palette} from '../utils/theme';\n\nconst styles = {\n    root: css`\n        display: flex;\n        align-items: center;\n        border: 1px solid ${palette.orange};\n        border-radius: 5px;\n        padding: 0 5px;\n        margin-right: 5px;\n        :hover {\n            background-color: #4c5156;\n        }\n    `,\n    a: css`\n        box-shadow: none;\n        font-size: 0.75rem;\n    `\n};\n\n/**\n *\n * @param {Object} props - props\n * @returns {React.ReactNode} node\n */\nconst Tag = ({link, text}) => (\n    <div css={styles.root}>\n        <Link css={styles.a} to={link}>\n            {text}\n        </Link>\n    </div>\n);\n\nTag.propTypes = {\n    text: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n};\n\nexport default Tag;\n"],"sourceRoot":""}